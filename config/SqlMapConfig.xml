<?xml version="1.0" encoding="UTF-8" ?>
<!--约束 -->
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- 根标签 -->
<configuration>

	<properties resource="db.properties">
		<!-- 在properties内部用property定义属性 -->
		<!-- 如果外部配置文件有该属性，则内部定义属性被外部属性覆盖 -->
		<property name="jdbc.username" value="root123" />
		<property name="jdbc.password" value="root123" />
	</properties>


	<!-- 注意： MyBatis 将按照下面的顺序来加载属性：  在 properties 元素体内定义的属性首先被读取。  然后会读取properties 
		元素中resource或 url 加载的属性，它会覆盖已读取的同名属性。 -->

	<!-- 运行环境 -->
	<!-- 和spring整合后 environments配置将废除 -->
	<environments default="development">
		<environment id="development">
			<!-- 使用jdbc事务管理 -->
			<transactionManager type="JDBC" />
			<!-- 数据库连接池 -->
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />

				<!-- 超过时间限制是否回收 -->
				<!-- <property name="removeAbandoned" value="true" /> -->
				<!-- 超过时间限制多长； -->
				<!--<property name="removeAbandonedTimeout" value="180" /> -->
				<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
				<!--<property name="timeBetweenEvictionRunsMillis"value="60000" /> -->
				<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
				<!-- <property name="minEvictableIdleTimeMillis" value="300000" /> -->
				<!-- 用来检测连接是否有效的sql，要求是一个查询语句 -->

				<!--<property name="validationQuery" value="SELECT 1" /> -->
				<!-- 申请连接的时候检测 -->
				<!--<property name="testWhileIdle" value="true" /> -->

				<!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
				<!-- <property name="testOnBorrow" value="false" /> -->
				<!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
				<!--<property name="testOnReturn" value="false" /> -->
			</dataSource>
		</environment>
	</environments>

	<!-- 加载映射文件 -->
	<mappers>
		<!-- 使用包扫描的方式 -->
		<package name="cn.mapper" />
		<!-- 注意：此种方法要求mapper接口名称和mapper映射文件名称相同，且放在同一个目录中。 -->
	</mappers>

</configuration>
